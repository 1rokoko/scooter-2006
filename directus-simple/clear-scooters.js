const axios = require('axios');

const DIRECTUS_URL = 'http://localhost:8055';
const EMAIL = 'seocos@gmail.com';
const PASSWORD = 'directus2024!';

let authToken = '';

async function authenticate() {
  console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...');
  const response = await axios.post(`${DIRECTUS_URL}/auth/login`, {
    email: EMAIL,
    password: PASSWORD
  });
  authToken = response.data.data.access_token;
  console.log('‚úì –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞\n');
}

async function clearScooters() {
  try {
    await authenticate();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∫—É—Ç–µ—Ä—ã
    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫—É—Ç–µ—Ä–æ–≤...');
    const response = await axios.get(
      `${DIRECTUS_URL}/items/scooters?limit=-1`,
      {
        headers: { Authorization: `Bearer ${authToken}` }
      }
    );
    
    const scooters = response.data.data;
    console.log(`‚úì –ù–∞–π–¥–µ–Ω–æ —Å–∫—É—Ç–µ—Ä–æ–≤: ${scooters.length}\n`);
    
    if (scooters.length === 0) {
      console.log('‚úì –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ –ø—É—Å—Ç–∞\n');
      return;
    }
    
    // –£–¥–∞–ª—è–µ–º –∫–∞–∂–¥—ã–π —Å–∫—É—Ç–µ—Ä
    console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—É—Ç–µ—Ä–æ–≤...\n');
    for (let i = 0; i < scooters.length; i++) {
      const scooter = scooters[i];
      console.log(`[${i + 1}/${scooters.length}] –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—É—Ç–µ—Ä–∞ ID: ${scooter.id}`);
      
      try {
        await axios.delete(
          `${DIRECTUS_URL}/items/scooters/${scooter.id}`,
          {
            headers: { Authorization: `Bearer ${authToken}` }
          }
        );
        console.log(`  ‚úì –£–¥–∞–ª–µ–Ω`);
      } catch (error) {
        console.log(`  ‚úó –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
    
    console.log('\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏:', error.response.data);
    }
  }
}

clearScooters();

