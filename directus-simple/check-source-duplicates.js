const fs = require('fs');

const data = JSON.parse(fs.readFileSync('scooters-data.json', 'utf8'));

console.log('\n' + '='.repeat(70));
console.log('üîç –ü–†–û–í–ï–†–ö–ê –î–£–ë–õ–ò–ö–ê–¢–û–í –í –ò–°–•–û–î–ù–´–• –î–ê–ù–ù–´–•');
console.log('='.repeat(70) + '\n');

console.log(`–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${data.length}\n`);

// –ü–æ–¥—Å—á–µ—Ç –Ω–æ–º–µ—Ä–æ–≤
const numberCounts = {};
data.forEach((s, index) => {
  const number = s['–Ω–æ–º–µ—Ä —Å–∫—É—Ç–µ—Ä–∞  (—Å—Ç–∞—Ä—ã–π)'] || s['–Ω–æ–º–µ—Ä —Å–∫—É—Ç–µ—Ä–∞  '];
  if (number && number.trim()) {
    if (!numberCounts[number]) {
      numberCounts[number] = [];
    }
    numberCounts[number].push(index + 1);
  }
});

// –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã
const duplicates = Object.entries(numberCounts).filter(([num, indices]) => indices.length > 1);

if (duplicates.length > 0) {
  console.log(`‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –î–£–ë–õ–ò–ö–ê–¢–´ (${duplicates.length}):\n`);
  duplicates.forEach(([number, indices]) => {
    console.log(`  "${number}": –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è ${indices.length} —Ä–∞–∑(–∞)`);
    console.log(`    –ò–Ω–¥–µ–∫—Å—ã: ${indices.join(', ')}`);
  });
} else {
  console.log('‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!\n');
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞
const uniqueNumbers = Object.keys(numberCounts);
console.log(`\n–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤: ${uniqueNumbers.length}\n`);

console.log('='.repeat(70) + '\n');

