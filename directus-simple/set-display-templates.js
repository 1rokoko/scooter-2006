const axios = require('axios');

const DIRECTUS_URL = 'http://localhost:8055';
const EMAIL = 'seocos@gmail.com';
const PASSWORD = 'directus2024!';

let authToken = '';

async function authenticate() {
  const response = await axios.post(`${DIRECTUS_URL}/auth/login`, {
    email: EMAIL,
    password: PASSWORD
  });
  authToken = response.data.data.access_token;
  console.log('‚úì Authenticated\n');
  return authToken;
}

async function updateCollection(collection, meta) {
  try {
    await axios.patch(
      `${DIRECTUS_URL}/collections/${collection}`,
      { meta },
      {
        headers: { Authorization: `Bearer ${authToken}` }
      }
    );
    console.log(`‚úì Updated ${collection}`);
  } catch (error) {
    console.error(`‚úó Error updating ${collection}:`, error.response?.data?.errors?.[0]?.message || error.message);
  }
}

async function setDisplayTemplates() {
  console.log('üîß Setting display templates...\n');
  await authenticate();
  
  console.log('üìä Updating collection display templates...\n');
  
  // Scooters - –Ω–æ–º–µ—Ä —Å–∫—É—Ç–µ—Ä–∞ –∫–∞–∫ –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ
  await updateCollection('scooters', {
    display_template: '{{scooter_number_old}}',
    sort_field: 'scooter_number_old',
    icon: 'two_wheeler',
    note: '–°–∫—É—Ç–µ—Ä—ã –∏ –º–æ—Ç–æ—Ü–∏–∫–ª—ã'
  });
  
  // Clients
  await updateCollection('clients', {
    display_template: '{{first_name}} {{last_name}}',
    sort_field: 'last_name',
    icon: 'people_alt',
    note: '–ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤'
  });
  
  // Rentals
  await updateCollection('rentals', {
    display_template: '{{rental_number}}',
    sort_field: 'rental_number',
    icon: 'receipt_long',
    note: '–ê—Ä–µ–Ω–¥—ã'
  });
  
  // Communications
  await updateCollection('communications', {
    display_template: '{{communication_type}} - {{communication_date}}',
    sort_field: 'communication_date',
    icon: 'chat',
    note: '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏'
  });
  
  // Maintenance Records
  await updateCollection('maintenance_records', {
    display_template: '{{maintenance_type}} - {{maintenance_date}}',
    sort_field: 'maintenance_date',
    icon: 'build',
    note: '–ò—Å—Ç–æ—Ä–∏—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'
  });
  
  console.log('\n‚úÖ Display templates configured!');
  console.log('\nüí° –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F5)');
  console.log('üåê http://localhost:8055/admin/content/scooters');
  console.log('\nüìã –¢–µ–ø–µ—Ä—å:');
  console.log('   - Scooters: –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ = –Ω–æ–º–µ—Ä —Å–∫—É—Ç–µ—Ä–∞');
  console.log('   - Clients: –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ = –∏–º—è —Ñ–∞–º–∏–ª–∏—è');
  console.log('   - Rentals: –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ = –Ω–æ–º–µ—Ä –∞—Ä–µ–Ω–¥—ã');
  console.log('   - –í—Å–µ –ø–æ–ª—è –≤–∏–¥–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ!');
}

setDisplayTemplates().catch(console.error);

