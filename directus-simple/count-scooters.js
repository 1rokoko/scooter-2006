const axios = require('axios');

const DIRECTUS_URL = 'http://localhost:8055';
const EMAIL = 'seocos@gmail.com';
const PASSWORD = 'directus2024!';

async function countScooters() {
  try {
    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    const authResponse = await axios.post(`${DIRECTUS_URL}/auth/login`, {
      email: EMAIL,
      password: PASSWORD
    });
    const authToken = authResponse.data.data.access_token;
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—É—Ç–µ—Ä–æ–≤
    const response = await axios.get(
      `${DIRECTUS_URL}/items/scooters?limit=-1`,
      {
        headers: { Authorization: `Bearer ${authToken}` }
      }
    );
    
    const scooters = response.data.data;
    
    console.log('\n' + '='.repeat(60));
    console.log('üìä –ö–û–õ–ò–ß–ï–°–¢–í–û –°–ö–£–¢–ï–†–û–í –í DIRECTUS');
    console.log('='.repeat(60));
    console.log(`\n–í—Å–µ–≥–æ —Å–∫—É—Ç–µ—Ä–æ–≤: ${scooters.length}\n`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –Ω–æ–º–µ—Ä–æ–≤
    console.log('–ü–µ—Ä–≤—ã–µ 5 –Ω–æ–º–µ—Ä–æ–≤:');
    scooters.slice(0, 5).forEach((s, i) => {
      console.log(`  ${i+1}. ${s.scooter_number_old || 'NO NUMBER'} (ID: ${s.id})`);
    });
    
    console.log('\n' + '='.repeat(60) + '\n');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  }
}

countScooters();

